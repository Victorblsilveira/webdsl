/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Application");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCodeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCodeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCodeCodeParserRuleCall_5_0 = (RuleCall)cCodeAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCodeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCodeCodeParserRuleCall_6_1_0 = (RuleCall)cCodeAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Application:
		//	'Application'
		//	name=EString
		//	'{'
		//	'code' '{' code+=Code ("," code+=Code)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Application' name=EString '{' 'code' '{' code+=Code ("," code+=Code)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'Application'
		public Keyword getApplicationKeyword_0() { return cApplicationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'code'
		public Keyword getCodeKeyword_3() { return cCodeKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//code+=Code
		public Assignment getCodeAssignment_5() { return cCodeAssignment_5; }
		
		//Code
		public RuleCall getCodeCodeParserRuleCall_5_0() { return cCodeCodeParserRuleCall_5_0; }
		
		//("," code+=Code)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//code+=Code
		public Assignment getCodeAssignment_6_1() { return cCodeAssignment_6_1; }
		
		//Code
		public RuleCall getCodeCodeParserRuleCall_6_1_0() { return cCodeCodeParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class CodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Code");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCode_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFrontParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBackParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Code:
		//	Code_Impl | Front | Back;
		@Override public ParserRule getRule() { return rule; }
		
		//Code_Impl | Front | Back
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Code_Impl
		public RuleCall getCode_ImplParserRuleCall_0() { return cCode_ImplParserRuleCall_0; }
		
		//Front
		public RuleCall getFrontParserRuleCall_1() { return cFrontParserRuleCall_1; }
		
		//Back
		public RuleCall getBackParserRuleCall_2() { return cBackParserRuleCall_2; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class Code_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Code_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdEStringParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Code_Impl Code:
		//	'Code'
		//	'{'
		//	'id' id=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Code' '{' 'id' id=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'Code'
		public Keyword getCodeKeyword_0() { return cCodeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//id=EString
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_3_0() { return cIdEStringParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FrontElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Front");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFrontKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdEStringParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cLanguageKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLanguageAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLanguageLanguageParserRuleCall_5_0 = (RuleCall)cLanguageAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Front:
		//	'Front'
		//	'{'
		//	'id' id=EString
		//	'language' language=Language
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Front' '{' 'id' id=EString 'language' language=Language '}'
		public Group getGroup() { return cGroup; }
		
		//'Front'
		public Keyword getFrontKeyword_0() { return cFrontKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//id=EString
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_3_0() { return cIdEStringParserRuleCall_3_0; }
		
		//'language'
		public Keyword getLanguageKeyword_4() { return cLanguageKeyword_4; }
		
		//language=Language
		public Assignment getLanguageAssignment_5() { return cLanguageAssignment_5; }
		
		//Language
		public RuleCall getLanguageLanguageParserRuleCall_5_0() { return cLanguageLanguageParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class BackElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Back");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBackKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdEStringParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Back:
		//	'Back'
		//	'{'
		//	'id' id=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Back' '{' 'id' id=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'Back'
		public Keyword getBackKeyword_0() { return cBackKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//id=EString
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_3_0() { return cIdEStringParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LanguageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Language");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLanguageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeEStringParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRequisitionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRequisitionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRequisitionRequisitionParserRuleCall_4_2_0 = (RuleCall)cRequisitionAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cRequisitionAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cRequisitionRequisitionParserRuleCall_4_3_1_0 = (RuleCall)cRequisitionAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInterceptorKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cInterceptorAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cInterceptorInterceptorParserRuleCall_5_2_0 = (RuleCall)cInterceptorAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cInterceptorAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cInterceptorInterceptorParserRuleCall_5_3_1_0 = (RuleCall)cInterceptorAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Language:
		//	'Language'
		//	'{'
		//	'type' type=EString ('requisition' '{' requisition+=Requisition ("," requisition+=Requisition)* '}')? ('interceptor'
		//	'{' interceptor+=Interceptor ("," interceptor+=Interceptor)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Language' '{' 'type' type=EString ('requisition' '{' requisition+=Requisition ("," requisition+=Requisition)* '}')?
		//('interceptor' '{' interceptor+=Interceptor ("," interceptor+=Interceptor)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'Language'
		public Keyword getLanguageKeyword_0() { return cLanguageKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=EString
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_3_0() { return cTypeEStringParserRuleCall_3_0; }
		
		//('requisition' '{' requisition+=Requisition ("," requisition+=Requisition)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'requisition'
		public Keyword getRequisitionKeyword_4_0() { return cRequisitionKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//requisition+=Requisition
		public Assignment getRequisitionAssignment_4_2() { return cRequisitionAssignment_4_2; }
		
		//Requisition
		public RuleCall getRequisitionRequisitionParserRuleCall_4_2_0() { return cRequisitionRequisitionParserRuleCall_4_2_0; }
		
		//("," requisition+=Requisition)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//requisition+=Requisition
		public Assignment getRequisitionAssignment_4_3_1() { return cRequisitionAssignment_4_3_1; }
		
		//Requisition
		public RuleCall getRequisitionRequisitionParserRuleCall_4_3_1_0() { return cRequisitionRequisitionParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('interceptor' '{' interceptor+=Interceptor ("," interceptor+=Interceptor)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'interceptor'
		public Keyword getInterceptorKeyword_5_0() { return cInterceptorKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//interceptor+=Interceptor
		public Assignment getInterceptorAssignment_5_2() { return cInterceptorAssignment_5_2; }
		
		//Interceptor
		public RuleCall getInterceptorInterceptorParserRuleCall_5_2_0() { return cInterceptorInterceptorParserRuleCall_5_2_0; }
		
		//("," interceptor+=Interceptor)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//interceptor+=Interceptor
		public Assignment getInterceptorAssignment_5_3_1() { return cInterceptorAssignment_5_3_1; }
		
		//Interceptor
		public RuleCall getInterceptorInterceptorParserRuleCall_5_3_1_0() { return cInterceptorInterceptorParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RequisitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Requisition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRequisitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMethodKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodEStringParserRuleCall_4_0 = (RuleCall)cMethodAssignment_4.eContents().get(0);
		private final Keyword cUrlKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cUrlAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUrlEStringParserRuleCall_6_0 = (RuleCall)cUrlAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Requisition:
		//	'Requisition'
		//	name=EString
		//	'{'
		//	'method' method=EString
		//	'url' url=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Requisition' name=EString '{' 'method' method=EString 'url' url=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'Requisition'
		public Keyword getRequisitionKeyword_0() { return cRequisitionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'method'
		public Keyword getMethodKeyword_3() { return cMethodKeyword_3; }
		
		//method=EString
		public Assignment getMethodAssignment_4() { return cMethodAssignment_4; }
		
		//EString
		public RuleCall getMethodEStringParserRuleCall_4_0() { return cMethodEStringParserRuleCall_4_0; }
		
		//'url'
		public Keyword getUrlKeyword_5() { return cUrlKeyword_5; }
		
		//url=EString
		public Assignment getUrlAssignment_6() { return cUrlAssignment_6; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_6_0() { return cUrlEStringParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class InterceptorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Interceptor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInterceptorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMethodKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodEStringParserRuleCall_4_0 = (RuleCall)cMethodAssignment_4.eContents().get(0);
		private final Keyword cUrlKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cUrlAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUrlEStringParserRuleCall_6_0 = (RuleCall)cUrlAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Interceptor:
		//	'Interceptor'
		//	name=EString
		//	'{'
		//	'method' method=EString
		//	'url' url=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Interceptor' name=EString '{' 'method' method=EString 'url' url=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'Interceptor'
		public Keyword getInterceptorKeyword_0() { return cInterceptorKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'method'
		public Keyword getMethodKeyword_3() { return cMethodKeyword_3; }
		
		//method=EString
		public Assignment getMethodAssignment_4() { return cMethodAssignment_4; }
		
		//EString
		public RuleCall getMethodEStringParserRuleCall_4_0() { return cMethodEStringParserRuleCall_4_0; }
		
		//'url'
		public Keyword getUrlKeyword_5() { return cUrlKeyword_5; }
		
		//url=EString
		public Assignment getUrlAssignment_6() { return cUrlAssignment_6; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_6_0() { return cUrlEStringParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	
	
	private final ApplicationElements pApplication;
	private final CodeElements pCode;
	private final EStringElements pEString;
	private final Code_ImplElements pCode_Impl;
	private final FrontElements pFront;
	private final BackElements pBack;
	private final LanguageElements pLanguage;
	private final RequisitionElements pRequisition;
	private final InterceptorElements pInterceptor;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pApplication = new ApplicationElements();
		this.pCode = new CodeElements();
		this.pEString = new EStringElements();
		this.pCode_Impl = new Code_ImplElements();
		this.pFront = new FrontElements();
		this.pBack = new BackElements();
		this.pLanguage = new LanguageElements();
		this.pRequisition = new RequisitionElements();
		this.pInterceptor = new InterceptorElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Application:
	//	'Application'
	//	name=EString
	//	'{'
	//	'code' '{' code+=Code ("," code+=Code)* '}'
	//	'}';
	public ApplicationElements getApplicationAccess() {
		return pApplication;
	}
	
	public ParserRule getApplicationRule() {
		return getApplicationAccess().getRule();
	}
	
	//Code:
	//	Code_Impl | Front | Back;
	public CodeElements getCodeAccess() {
		return pCode;
	}
	
	public ParserRule getCodeRule() {
		return getCodeAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Code_Impl Code:
	//	'Code'
	//	'{'
	//	'id' id=EString
	//	'}';
	public Code_ImplElements getCode_ImplAccess() {
		return pCode_Impl;
	}
	
	public ParserRule getCode_ImplRule() {
		return getCode_ImplAccess().getRule();
	}
	
	//Front:
	//	'Front'
	//	'{'
	//	'id' id=EString
	//	'language' language=Language
	//	'}';
	public FrontElements getFrontAccess() {
		return pFront;
	}
	
	public ParserRule getFrontRule() {
		return getFrontAccess().getRule();
	}
	
	//Back:
	//	'Back'
	//	'{'
	//	'id' id=EString
	//	'}';
	public BackElements getBackAccess() {
		return pBack;
	}
	
	public ParserRule getBackRule() {
		return getBackAccess().getRule();
	}
	
	//Language:
	//	'Language'
	//	'{'
	//	'type' type=EString ('requisition' '{' requisition+=Requisition ("," requisition+=Requisition)* '}')? ('interceptor'
	//	'{' interceptor+=Interceptor ("," interceptor+=Interceptor)* '}')?
	//	'}';
	public LanguageElements getLanguageAccess() {
		return pLanguage;
	}
	
	public ParserRule getLanguageRule() {
		return getLanguageAccess().getRule();
	}
	
	//Requisition:
	//	'Requisition'
	//	name=EString
	//	'{'
	//	'method' method=EString
	//	'url' url=EString
	//	'}';
	public RequisitionElements getRequisitionAccess() {
		return pRequisition;
	}
	
	public ParserRule getRequisitionRule() {
		return getRequisitionAccess().getRule();
	}
	
	//Interceptor:
	//	'Interceptor'
	//	name=EString
	//	'{'
	//	'method' method=EString
	//	'url' url=EString
	//	'}';
	public InterceptorElements getInterceptorAccess() {
		return pInterceptor;
	}
	
	public ParserRule getInterceptorRule() {
		return getInterceptorAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
